# ASP.NET Core

# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool: 
  vmImage: 'ubuntu-18.04'

variables:
  buildConfiguration: 'Release'
  GLOBAL_AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
  GLOBAL_AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
  GLOBAL_AZURE_TENANT_ID: $(AZURE_TENANT_ID)
  GLOBAL_AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)

steps:

# - script: dotnet build --configuration $(buildConfiguration)
#   displayName: 'dotnet build $(buildConfiguration)'
  
# - script: dotnet publish --configuration $(BuildConfiguration) --output $(Build.Stagingdirectory)


- task: PowerShell@2
  inputs:
    TargetType: inline
    script: pip install azure-identity 
            pip install azure-keyvault-secrets
            
# - task: PowerShell@2
#   inputs:
#       targetType: 'inline'
#       script: 'python pytest/pipePyTest.py'
#   env:
#     AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
#     AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
#     AZURE_TENANT_ID: $(AZURE_TENANT_ID)
#     AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
      

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true
    architecture: x64

- task: PythonScript@0
  inputs:
    scriptSource: filePath
    scriptPath: pipePyTest.py
  env:
    AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
    AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
    AZURE_TENANT_ID: $(AZURE_TENANT_ID)
    AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
    
    

# - task: AzureCLI@2
#   inputs:
#     azureSubscription: 'JacMar service principal'
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     #inlineScript: az account show
#     inlineScript: 'python pytest/pipePyTest.py'


# - task: AzureFunction@1
#   inputs:
#     function: 'https://jacmarfunctest.azurewebsites.net/api/HttpTrigger1'
#     key: 'liWFqfjjVgsIpxc7uQFI72cdpPgNgHvfnWqlLSDPPs3oKcxvJxdaFw=='
#     method: 'GET'
#     # body: |
#     #   {
#     #   "Name":"Jacob"
#     #   }
#     # waitForCompletion: 'true'





# - task: AzureFunction@1
#   inputs:
#     function: 'https://jacmarauthfunctest.azurewebsites.net/api/HttpTrigger1'
#     key: 'CaDqYH0lM9N4zKjUBgZfiC/5Jlkf/nGDeq7yC0yZ0qL6cdDjfxIV5A=='
#     method: 'GET'
#     body: "a string"
    

# - task: PowerShell@2
#   inputs:
#     targetType: 'inline'
#     script: |
#       git rev-parse --short HEAD > $(Build.Stagingdirectory)/wwwroot/version.txt
#       $COMMITHASH = type $(Build.Stagingdirectory)/wwwroot/version.txt
#       Write-Host "##vso[task.setvariable variable=GitVersionVar]$COMMITHASH"
#       Write-Host "$env:JOBHOST"
#       Write-Host "$env:SENTRYPROJECTNAME"
#       Write-Host "$env:SENTRYTOKEN"
#   displayName: 'Get Git Commit Hash'

      
#- task: PowerShell@2
#  inputs:
#    targetType: 'inline'
#    script: |
      # Write your PowerShell commands here.
#      cd $(Build.StagingDirectory)
#      $stuff = Dir
#      Write-Host $Build.BuildNumber
#      Write-Host "words"
      # New-Item -Path $(Build.StagingDirectory)/wwwroot -Name "testfile1.txt" -ItemType "file" -Value "$Build.BuildNumber"
      
# - task: DotNetCoreCLI@2
#   inputs:
#     command: publish
#     publishWebProjects: True
#     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#     zipAfterPublish: True

# - task: PublishBuildArtifacts@1
  # inputs:
  #   targetPath: '$(Build.ArtifactStagingDirectory)' 
  #   artifactName: 'jacmarDotnet5Pipe'

# - task: AzureRmWebAppDeployment@4
#   inputs:
#     ConnectionType: 'AzureRM'
#     azureSubscription: 'JacMar service principal'
#     appType: 'webApp'
#     WebAppName: 'jacmarDotnet5Pipe'
#     #DeploymentType: webDeploy
#     RemoveAdditionalFilesFlag: true
#     enableCustomDeployment: true
#     #ExcludeFilesFromAppDataFlag: false
    
#     packageForLinux: '$(Build.StagingDirectory)'

    